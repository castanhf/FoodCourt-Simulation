import java.util.*;

/********************************************************************
 * NormalDistribution
 * 
 * A class for generating a sequence of random non-negative quantums.
 * 
 * @author ___________________
 * @version 7 March 2017
 ********************************************************************/
public class RandomNormal extends Random
{

    public RandomNormal()
    {
    }

    
    /**
     * ----------------------------------------------------------------
     * Let Z denote the normal distribution, also called Gaussian,
     * the graph of which is bell shaped with a mean (M) of 0 and
     * a standard diviation (SD) of 1.
     * 
     * The interval [-3,3] contains 99.74% of the values in the
     * Z population, i.e.
     * 
     *               P( Z | -3 <= Z <= 3 )  = .9974
     * The population of values for 
     *                        SD * Z
     * has a mean of 0 with as standard deviation of SD so that
     * 
     *          P( SD*Z | -3*SD <= SD*Z <= 3*SD )  = .9974
     * 
     * has a mean of M with a standard deviation of SD.
     * 
     * Thus, 99.74% of the values generated by
     *                    M * SD * nextGaussian() + M
     * are within the interval
     *                     [M * (1 - 3*SD), M * (1 + 3*SD)]
     * which reduces to 
     *                     [0, 2*M]
     *                     
     * with SD chosen to be 1/3 (= 0.333...).
     * -----------------------------------------------------------------
     */
    
    
    //random.setSeed(13); would generate the same repeatable random sequence, for a user to repeat the experiment
    
    
    public double number( double mean )
    {
        return Math.max( 0, mean * 0.333 * this.nextGaussian() + mean );
    }

    
    public static void main(String args[]){
        
        RandomNormal r = new RandomNormal();
        double value;
        double total = 0.0;
        int MAX = 100;
            
        System.out.println( "random number \t\t random sum ");

        total = 0.0;
        for(int i=1; i<= MAX; i++){
            value = r.number(10.5);
            total += value;
            
            System.out.println( value+ "\t" + total);
        }

        System.out.println("Average: " + (double)total/MAX);
    }
}
