#BlueJ class context
comment0.params=eventType\ eventTime
comment0.target=Event163(java.lang.String,\ double)
comment0.text=The\ following\ constructor\ might\ be\ useful\ for\ creating\ an\ event\ to\ ARRIVE\ or\ to\ ENTER
comment1.params=eventType\ eventTime\ block\ serverNumber\ trackingNumber
comment1.target=Event163(java.lang.String,\ double,\ int,\ int,\ java.lang.String)
comment1.text=The\ following\ constructor\ might\ be\ useful\ for\ creating\ an\ event\ to\ DEPART\ or\ to\ ENTER
comment10.params=args
comment10.target=void\ main(java.lang.String[])
comment2.params=eventType
comment2.target=boolean\ hasType(java.lang.String)
comment2.text=\ ------------------------------------------------------------------------------------\r\n\ @returns\ true\ if\ currentType\ field\ matches\ the\ eventType\ parameter,\ otherwise\ false.\r\n------------------------------------------------------------------------------------
comment3.params=e
comment3.target=int\ compareTo(java.lang.Object)
comment3.text=\r\n\ This\ method\ is\ required\ for\ the\ Comparable\ interface\r\n\ It\ returns\ a\ negative\ number\ if\ the\ first\ event\ is\ \r\n\ scheduled\ to\ occur\ before\ the\ second\ event.\ \ It\ is\ \r\n\ not\ explicitely\ invoked\ within\ a\ program\ but\ instead\r\n\ used\ whenever\ a\ comparison\ is\ necessary.\r\n\ @param\ e\ is\ expected\ to\ be\ another\ Event\r\n
comment4.params=
comment4.target=java.lang.String\ arrivalNumberString()
comment5.params=
comment5.target=java.lang.String\ eventNumberString()
comment6.params=
comment6.target=java.lang.String\ serverIndexString()
comment7.params=
comment7.target=java.lang.String\ toString()
comment8.params=time
comment8.target=java.lang.String\ toString(java.lang.String)
comment9.params=
comment9.target=void\ reset()
numComments=11
